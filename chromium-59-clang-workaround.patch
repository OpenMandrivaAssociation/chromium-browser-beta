--- chromium-65.0.3298.3/third_party/angle/src/compiler/preprocessor/ExpressionParser.cpp.0120~	2017-12-19 21:07:32.000000000 +0100
+++ chromium-65.0.3298.3/third_party/angle/src/compiler/preprocessor/ExpressionParser.cpp	2017-12-19 23:44:51.796064532 +0100
@@ -291,7 +291,7 @@ typedef short int yytype_int16;
 # define YYUSE(E) /* empty */
 #endif
 
-#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
+#if !defined(__clang__) && defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
 # define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
     _Pragma ("GCC diagnostic push") \
--- chromium-65.0.3298.3/third_party/angle/src/compiler/translator/glslang_tab.cpp.0120~	2017-12-19 21:07:32.000000000 +0100
+++ chromium-65.0.3298.3/third_party/angle/src/compiler/translator/glslang_tab.cpp	2017-12-19 23:44:51.797064539 +0100
@@ -520,7 +520,7 @@ typedef short int yytype_int16;
 # define YYUSE(E) /* empty */
 #endif
 
-#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
+#if !defined(__clang__) && defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
 # define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
     _Pragma ("GCC diagnostic push") \
--- chromium-65.0.3298.3/third_party/libdrm/src/xf86drm.c.0120~	2017-12-19 21:07:33.000000000 +0100
+++ chromium-65.0.3298.3/third_party/libdrm/src/xf86drm.c	2017-12-19 23:44:51.797064539 +0100
@@ -2735,8 +2735,8 @@ int drmGetNodeTypeFromFd(int fd)
     if (fstat(fd, &sbuf))
         return -1;
 
-    maj = major(sbuf.st_rdev);
-    min = minor(sbuf.st_rdev);
+    maj = gnu_dev_major(sbuf.st_rdev);
+    min = gnu_dev_minor(sbuf.st_rdev);
 
     if (maj != DRM_MAJOR || !S_ISCHR(sbuf.st_mode)) {
         errno = EINVAL;
@@ -2801,8 +2801,8 @@ static char *drmGetMinorNameForFD(int fd
     if (fstat(fd, &sbuf))
         return NULL;
 
-    maj = major(sbuf.st_rdev);
-    min = minor(sbuf.st_rdev);
+    maj = gnu_dev_major(sbuf.st_rdev);
+    min = gnu_dev_minor(sbuf.st_rdev);
 
     if (maj != DRM_MAJOR || !S_ISCHR(sbuf.st_mode))
         return NULL;
@@ -3787,8 +3787,8 @@ int drmGetDevice2(int fd, uint32_t flags
         return -errno;
 
     find_rdev = sbuf.st_rdev;
-    maj = major(sbuf.st_rdev);
-    min = minor(sbuf.st_rdev);
+    maj = gnu_dev_major(sbuf.st_rdev);
+    min = gnu_dev_minor(sbuf.st_rdev);
 
     if (maj != DRM_MAJOR || !S_ISCHR(sbuf.st_mode))
         return -EINVAL;
@@ -3815,8 +3815,8 @@ int drmGetDevice2(int fd, uint32_t flags
         if (stat(node, &sbuf))
             continue;
 
-        maj = major(sbuf.st_rdev);
-        min = minor(sbuf.st_rdev);
+        maj = gnu_dev_major(sbuf.st_rdev);
+        min = gnu_dev_minor(sbuf.st_rdev);
 
         if (maj != DRM_MAJOR || !S_ISCHR(sbuf.st_mode))
             continue;
@@ -3965,8 +3965,8 @@ int drmGetDevices2(uint32_t flags, drmDe
         if (stat(node, &sbuf))
             continue;
 
-        maj = major(sbuf.st_rdev);
-        min = minor(sbuf.st_rdev);
+        maj = gnu_dev_major(sbuf.st_rdev);
+        min = gnu_dev_minor(sbuf.st_rdev);
 
         if (maj != DRM_MAJOR || !S_ISCHR(sbuf.st_mode))
             continue;
--- chromium-65.0.3298.3/third_party/swiftshader/src/OpenGL/compiler/glslang_tab.cpp.0120~	2017-12-19 21:07:35.000000000 +0100
+++ chromium-65.0.3298.3/third_party/swiftshader/src/OpenGL/compiler/glslang_tab.cpp	2017-12-19 23:44:51.798064546 +0100
@@ -483,7 +483,7 @@ typedef short int yytype_int16;
 # define YYUSE(E) /* empty */
 #endif
 
-#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
+#if !defined(__clang__) && defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
 # define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
     _Pragma ("GCC diagnostic push") \
--- chromium-65.0.3298.3/third_party/swiftshader/src/OpenGL/compiler/preprocessor/ExpressionParser.cpp.0120~	2017-12-19 21:07:35.000000000 +0100
+++ chromium-65.0.3298.3/third_party/swiftshader/src/OpenGL/compiler/preprocessor/ExpressionParser.cpp	2017-12-19 23:44:51.798064546 +0100
@@ -277,7 +277,7 @@ typedef short int yytype_int16;
 # define YYUSE(E) /* empty */
 #endif
 
-#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
+#if !defined(__clang__) && defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
 /* Suppress an incorrect diagnostic about yylval being uninitialized.  */
 # define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
     _Pragma ("GCC diagnostic push") \
